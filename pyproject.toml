[tool.poetry]
name = "github-audit-tool"
version = "0.1.0"
description = "This is a tool for auditing github repos, users, and teams. Good for compliance, security and other stuff."
authors = [
    "Ben Francom <bfrancom@gmail.com>",
    "pythoninthegrass <4097471+pythoninthegrass@users.noreply.github.com>"
]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.13.0,<4.0.0"
certifi = "^2024.8.30"
cffi = "^1.17.1"
charset-normalizer = "^3.4.0"
deprecated = "^1.2.14"
idna = "^3.10"
pycparser = "^2.22"
pygithub = "^2.4.0"
pyjwt = "^2.9.0"
pynacl = "^1.5.0"
python-decouple = "^3.8"
requests = "^2.32.3"
urllib3 = "^2.2.3"
wrapt = "^1.16.0"

[tool.poetry.group.dev.dependencies]
argcomplete = "^3.5.0"
icecream = "^2.1.3"
ipython = "^8.27.0"
poetry-plugin-export = "^1.8.0"
poetry-plugin-up = "^0.7.1"
pyclean = "^3.0.0"
rich = "^13.8.1"
ruff = "^0.6.6"

[tool.poetry.group.test.dependencies]
coverage = "^7.6.1"
hypothesis = {extras = ["cli"], version = "^6.112.1"}
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-datafiles = "^3.0.0"
pytest-xdist = "^3.6.1"

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = [
    ".cache",
    ".eggs",
    ".git",
    ".github",
    ".gitmodules",
    ".pytest",
    ".pytest_cache",
    ".venv",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
    "node_modules"
]

[tool.uv.pip]
index-url = "https://pypi.org/simple"

[tool.ruff]
# Fix without reporting on leftover violations
fix-only = true

# Enumerate all fixed violations
show-fixes = true

# Indent width (default: 4)
indent-width = 4

# Black (default: 88)
line-length = 130

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    "dist",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    "__pycache__",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Assume Python 3.13
target-version = "py313"

[tool.ruff.format]
# Use spaces instead of tabs
indent-style = "space"

# Use `\n` line endings for all files
line-ending = "lf"

# Set quote style for strings
quote-style = "preserve"

[tool.ruff.lint]
# Enable pycodestyle (`E`), Pyflakes (`F`), and isort (`I`) by default.
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I001",
    "I002"
]
# Skip unused variable rules
ignore = []
extend-ignore = ["D203", "E203", "E251", "E266", "E401", "E402", "E501", "F401", "F403"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]

# unfixable = []

[tool.ruff.lint.isort]
from-first = false
lines-after-imports = 2
lines-between-types = 0
no-sections = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
